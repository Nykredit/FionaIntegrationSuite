name: Azure Function App Deploy
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        default: "dev"

env:
  AZURE_FUNCTIONAPP_NAME: wtmop-fiona-${{ inputs.environment }}-func-fa
  AZURE_FUNCTIONAPP_PACKAGE_PATH: published
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: src/FionaIntegrationSuite.Functions
  DOTNET_CORE_VERSION_INPROC: 6.0.x
jobs:
  build:
    runs-on:
      group: NykRunners
      labels: Linux
    environment:
      name: ${{ inputs.environment }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Setup .NET Core (for inproc extensions)
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION_INPROC }}
        include-prerelease: True
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
    - name: Deploy to Azure Function App
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"